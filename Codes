
#1

#include<reg52.h>
#include <intrins.h>
#define uint unsigned int
#define uchar unsigned char
sbit LED1=P1^0;
sbit Key=P3^5;
sbit ExInt=P3^2;
void ISRInit(){
	ExInt=1; 
	EA=1; 
	EX0=1; 
	IT0=1; 
	TH0 = 0;
	TL0 = 0;
	TMOD = 0x01;
	ET0 = 1;
	TR0 = 1;
}

int ON = 1;
int cnt = 0;
void main(){
	ISRInit();
	P1 = 0xFE;
	while(1){
		if(Key == 0){
			if(ON == 0) { ON = 1; }
			else if(ON == 1) { ON = 0; } 
			ExInt=0; 
		}
		else if(Key == 1){
			ExInt = 1;
		}		
	}
}

void Start() interrupt 0{
	if(ON == 0){
		cnt = 15;	
	}
	else if(ON == 1){
		cnt = 0;
	}
}


void Timer() interrupt 1{
	TH0 = 0;
	TL0 = 0;
	cnt++;
	if(cnt == 14){
		P1 = _crol_(P1,1);
		cnt = 0;
	}
}



-----------------------------------------------------------------------------------------------------------------------------------


#3


#include<reg52.h>
#define uint unsigned int
#define uchar unsigned char
sbit LED1=P1^0;
sbit Key=P3^5; 
sbit ExInt=P3^2;

void delay(uint c) {
 uint a, b;
 for(a=c; a>0; a--)
	for(b=415; b>0; b--);
}


void sevenSegmentNum(uchar num) {
 switch(num){
	case 0: {
	P1=0xC0;
	break;
 }
 case 1:{
	P1=0xF9;
	break;
 }
 case 2:{
	P1=0xA4;
	break;
 }
 case 3:{
	P1=0xB0;
	break;
 }
 case 4:{
	P1=0x99;
	break;
 }
 case 5: {
	P1=0x92;
	break;
 }
 case 6:{
	P1=0x82;
	break;
 }
 case 7: {
	P1=0xF8;
	break;
 }
 case 8: {
	P1=0x80;
 break;
 }
case 9: {
	P1=0x98;
	break;
 }
}
}

void sevenSegmentChar(uchar alph){
 switch(alph){
case 0: {
P1=0xA0;
break;
}
case 1:{
P1=0x83;
break;
}
case 2:{
P1=0xA7;
break;
}
case 3:{
P1=0xA1;
break;
}
case 4:{
P1=0x86;
break;
}
case 5:{
P1=0x8E;
break;
}
case 6:{
P1=0x90;
break;
}
case 7:{
P1=0x8B;
break;
}
case 8:{
P1=0xFB;
break;
}
case 9: {
P1=0xF1;
break;
}
case 10:{
P1=0x8F;
break;
}
case 11:{
P1=0xC7;
break;
}
case 12:{
P1=0xAA;
break;
}
case 13:{
P1=0xAB;
break;
}
case 14:{
P1=0xA3;
break;
}
case 15:{
P1=0x8C;
break;
}
case 16:{
P1=0x9A;
break;
}
case 17:{
P1=0xAF;
break;
}
case 18:{
P1=0x92;
break;
}
case 19:{
P1=0x87;
break;
}
case 20:{
P1=0xE3;
break;
}
case 21:{
P1=0xC1;
break;
}
case 22:{
P1=0x81;
break;
}
case 23:{
P1=0xB9;
break;
}
case 24:{
P1=0x8D;
break;
}
case 25:{
P1=0xB3;
break;
}
}
}
void bitSel(uchar D) {
switch(D){
case 1:{
P2=0xFE;
break;
}
case 2:{
P2=0xFD;
break;
}
case 3:{
P2=0xFB;
break;
}
case 4:{
P2=0xF7;
break;
}
}
}


void ISRInit(){
ExInt=1; 
EA=1; 
EX0=1; 
IT0=1; 
TH0 = 0;
TL0 = 0;
TMOD = 0x01;
ET0 = 1;
TR0 = 1;
}


void count(){
	int h, i, j, r, t, repeat;
	j = 0;
	repeat = 1;
	for(t = 0; t < 10; t++){
		for(h = 0; h < 10; h++){
			for(i = 0; j < 10; i++){
				for(r = 0; r < repeat; r++){
					bitSel(1);
					sevenSegmentNum(t);
					delay(1);
					bitSel(2);
					sevenSegmentNum(h);
					delay(1);
					bitSel(3); 
					sevenSegmentNum(j);
					delay(1);
					bitSel(4);
					sevenSegmentNum(i);
					delay(1);					
				}
				if(i == 9){
					i = -1;
					j++;
				}
			}
			j = 0;
		}
		h = 0;
	}			
}

int cnt = 0;
int num = 0;
int b3num, b2num, b1num, b0num;
int ON = 1;

void main(){
	ISRInit();
	while(1){
		if(Key == 0){
			if(ON == 0) { ON = 1; }
			else if(ON == 1) { ON = 0; } 
			ExInt=0; //Generate external interrupt signal
		}
		
		else if(Key == 1){
			ExInt = 1;
		}
		
		b3num = num/1000;
		b2num = (num%1000)/100;
		b1num = ((num%1000)%100)/10;
		b0num = ((num%1000)%100)%10;
		
		bitSel(1);
		sevenSegmentNum(b3num);
		delay(1);
		bitSel(2);
		sevenSegmentNum(b2num);
		delay(1);
		bitSel(3);
		sevenSegmentNum(b1num);
		delay(1);
		bitSel(4);
		sevenSegmentNum(b0num);
		delay(1);
	}
}

void Start() interrupt 0{
	if(ON == 0){
		cnt = 15;	
	}
	else if(ON == 1){
		cnt = 0;
	}
}


void Timer() interrupt 1{
	TH0 = 0;
	TL0 = 0;
	cnt++;
	if(cnt == 14){
		num++;
		cnt = 0;
	}
}


----------------------------------------------------------------------------------------------------------------------------------



#4 



#include<reg52.h>
#include <intrins.h>
#define uint unsigned int
#define uchar unsigned char
sbit LED1=P1^0;
sbit Key=P3^5;
sbit ExInt=P3^2;


void ISRInit(){
	ExInt=1; 
	EA=1; 
	EX0=1;
	IT0=1; 
	
	TH0 = 0;
	TL0 = 0;
	TMOD = 0x01;
	ET0 = 1;
	TR0 = 1;
}

int ON = 1;
int cnt = 0;

void main(){
	ISRInit();
	P1 = 0xFE;
	while(1){
		if(Key == 0){
			if(ON == 0) { ON = 1; }
			else if(ON == 1) { ON = 0; } 
			ExInt=0; //Generate external interrupt signal
		}
		
		else if(Key == 1){
			ExInt = 1;
		}	
	}
}

void Start() interrupt 0{
	if(ON == 0){
		cnt = 15;	
	}
	else if(ON == 1){
		cnt = 0;
	}
}



void Timer() interrupt 1{
	TH0 = 0;
	TL0 = 0;
	cnt++;
	if(cnt == 14){
		P1 = _crol_(P1,1);
		cnt = 0;
	}
}
